%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  FileName:            CyclicEncode.m
%  Description:         (7,4)循环码编码
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Parameter List:       
%       Output Parameter
%           encodeData	编码数据
%       Input Parameter
%           dataBit     待编码bit流数据
%           Gx          生成多项式
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  History
%    1. Date:           2018-06-15
%       Author:         Tony.Liu
%       Version:        1.1
%       Modification:   
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [encodeData] = CyclicEncode(dataBit,Gx)  

% Gx=[1,1,0,1]; % 生成多项式，[1,0,1,1]、[1,1,0,1]为（7,4）循环码优选多项式，有1位检错能力，[1,0,0,1]、[1,1,1,1]为非优选多项式，无检错能力
% 生成多项式可通过 matlab cyclpoly函数进行查询
     
reg=zeros(1,4);     %寄存器初始化
cycle_data = zeros(1,7);    %7为编码后的数据长度

%编码步骤
cycle_data = [dataBit ,0,0,0];    %循环码编码 信息位后增加对应监督位（附加n-k=7-4个0）

%循环编码
%用生成多项式去除码多项式，得到商和余式，最后的余式为监督位
for k=1:7
    reg(1,1:3)=reg(1,2:4);%reg 为四位移位寄存器，循环移位，前三位为上一次寄存器的后三位数据
    reg(1,4)=cycle_data(k); % 第四位为循环码后续进位值
    if reg(1)~=0 %  模二除法，被除数第一位不为0时，可进行模二除法，
        reg=xor(reg,Gx);%生成多项式做除数。
    end
end

ceeckBit = reg(2:4);%最后生成的监督位（余数）   
encodeData = [dataBit,ceeckBit];%循环码编码为 ：信息位+监督位

end


